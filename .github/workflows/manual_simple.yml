# This workflow automates the download of translated files from Lokalise  
# on a scheduled basis (every Friday at 09:00 UTC) or via manual trigger.  
#  
# Key actions:  
# 1. Fetches filtered translations (French, German, Spanish) with statuses:  
#    - Translated  
#    - Reviewed  
#    - Verified  
# 2. Uses the Lokalise API to export JSON files for the specified repository path.  
#  
# Secrets required:  
# - LOKALISE_PROJECT_ID: Lokalise project identifier  
# - LOKALISE_API_TOKEN: Authentication token for API access 

name: Get latest translation files manually

on:
  # allows to manually run the job at any time
  workflow_dispatch:
    inputs:
      pr-number:
        description: 'PR number to validate'
        required: false      
  # schedule:
  #   - cron: '0 9 * * fri'

jobs:
  makeRequest:
    runs-on: ubuntu-latest

    steps:
      - run: echo "Hello! I've been triggered manually!"

    # - name: Make request to external URI
    # run: |
    #   RESPONSE=$(curl -s -o response.json -w "%{http_code}" -X POST \
    #   -H "X-Api-Token: ${{ env.LOKALISE_API_TOKEN }}" \
    #   -H "accept: application/json" \
    #   -H "content-type: application/json" \
    #   -d '{
    #     "format": "json",
    #     "filter_data": ["translated","reviewed","verified"],
    #     "filter_langs": ["fr","de","es"],
    #     "filter_repositories":["NintexGlobal/pi-processmodeler/tree/lokalise/test1/packages/pi-administration:lokalise/test1"],
    #     "directory_prefix": "",
    #     "original_filenames": true,
    #     "triggers": [
    #     "github"
    #   ]}' \
    #   https://api.lokalise.com/api2/projects/${{ env.LOKALISE_PROJECT_ID }}/files/download)

    #   if [ "$RESPONSE" -ne 200 ]; then
    #     curl -X POST -H 'Content-type: application/json' \
    #     --data '{"text":"Lokalise request failed with status code '"$RESPONSE"'"}' \
    #     ${{ env.SLACK_WEBHOOK_URL }}
    #   fi
    # env:
    #   LOKALISE_PROJECT_ID: ${{ secrets.LOKALISE_PROJECT_ID  }}
    #   LOKALISE_API_TOKEN: ${{ secrets.LOKALISE_API_TOKEN }}
    #   SLACK_WEBHOOK_URL: ${{ 'https://smee.io/HMel3UU8fCNtlx7'}}